@model LoginandRegisterMVC.Models.User
@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;


@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="text-center">Register</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row">

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ServiceLine, htmlAttributes: new { @class = "control-label col-md-2" })


                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ServiceLine, new List<SelectListItem>
                    {
                        new SelectListItem{Text="AI",Value="MDU"},
                        new SelectListItem{Text="MDU",Value="MDU"},
                        new SelectListItem{Text="MDU",Value="MDU"},
                        new SelectListItem{Text="MDU",Value="MDU"},
                        new SelectListItem{Text="MDU",Value="MDU"}
                    }, "Select Service Line", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ServiceLine, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        @Html.MathCaptcha()

        @*@Html.Captcha(3)*@
        <br />
        <p class="Error" color="red">  @ViewBag.ErrMessage 
        <p>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-auto">
                    <input type="submit" value="Signup" class="btn btn-primary" />
                </div>
            </div>
    </div>
}

<div>
    Existing user?
    @Html.ActionLink("Login", "Login")
</div>

@if (Session["UserEmail"] != null)
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
