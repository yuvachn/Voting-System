@model IEnumerable<LoginandRegisterMVC.Models.Candidate>

@{
    ViewBag.Title = "Result";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}
<ul class="breadcrumb">
    <li><a href="../../Users/Index">Home</a></li>
    <li><a href="../../Users/ViewElection">Elections</a></li>
    <li><a href="#">Result</a></li>
</ul>


<!DOCTYPE HTML>
<html>
<head>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

</head>
<body>
    <div id="chartContainer1" style="height: 360px; width: 100%;"></div>
    <hr />
    <div id="chartContainer2" style="height: 360px; width: 100%;"></div>
    <script type="text/javascript">
window.onload = function () {

var Columnchart = new CanvasJS.Chart("chartContainer1", {
	animationEnabled: true,
	theme: "light2", // "light1", "dark1", "dark2"
	exportEnabled: true,
	title: {
		text: "Election Results"
	},
    axisX: {
        title: "Candidate ID",
        //     minimum: 250,
        maximum: @Html.Raw(ViewBag.Range) + 1,
        interval: 1,
        minimum: 0

    },
    axisY: {
        title: "Votes",
        interval: 1,
        minimum: 0,

    },
	data: [{
		type: "column",
        dataPoints:  @Html.Raw(ViewBag.DataPoints)
	}],
    rangeChanged: syncHandler
});
    Columnchart.render();



    var Piechart = new CanvasJS.Chart("chartContainer2", {
    theme: "light1", // "light1", "light2", "dark1", "dark2"
    exportEnabled: true,
    animationEnabled: true,
    title: {
    text: "Voted Users"
    },
    subtitles: [{
    text: "Election id : " + @Html.Raw(ViewBag.ElectionID)
    }],
    data: [{
    type: "pie",
    startAngle: 180,
    toolTipContent: "<b>{x}</b>: {y}",
    showInLegend: "true",
    legendText: "{x}",
    indexLabel: "{x} - {y}%",
    dataPoints: @Html.Raw(ViewBag.PieDataPoints)
    }],
    rangeChanged: syncHandler
    });
    Piechart.render();

    var charts = [Columnchart, Piechart];

    
};


    </script>
    <table class="table">
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.CandidateId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Votes)
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.CandidateId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Votes)
                </td>
            </tr>
        }

    </table>


</body>
</html>
